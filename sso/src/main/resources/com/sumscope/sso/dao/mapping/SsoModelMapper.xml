<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nihao001.sso.dao.SsoModelMapper">
	<resultMap id="BaseResultMap" type="com.nihao001.sso.dao.model.SsoModel">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="platform" jdbcType="VARCHAR" property="platform"
			typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="token" jdbcType="VARCHAR" property="token" />
	</resultMap>
	<sql id="Base_Column_List">
		id, username, platform, create_time, modify_time, token
	</sql>
	<select id="selectByUsernameAndPlatform" parameterType="com.nihao001.sso.dao.model.dto.SsoQueryDto"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sso
		where username = #{username,jdbcType=VARCHAR} and platform =
		#{platform,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
	</select>

	<insert id="insert" parameterType="com.nihao001.sso.dao.model.SsoModel">
		insert into sso (id, username, platform,
		create_time, modify_time, token
		)
		values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},
		#{platform,jdbcType=VARCHAR,
		typeHandler=org.apache.ibatis.type.EnumTypeHandler},
		#{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP},
		#{token,jdbcType=VARCHAR}
		)
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.nihao001.sso.dao.model.SsoModel">
		update sso
		set username = #{username,jdbcType=VARCHAR},
		platform =
		#{platform,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		modify_time = #{modifyTime,jdbcType=TIMESTAMP},
		token = #{token,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>